/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.40
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CommonAudit,
    CommonAuditFromJSON,
    CommonAuditFromJSONTyped,
    CommonAuditToJSON,
    FieldEUserType,
    FieldEUserTypeFromJSON,
    FieldEUserTypeFromJSONTyped,
    FieldEUserTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserResponseAllOf
 */
export interface UserResponseAllOf {
    /**
     * The unique ID of the User
     * @type {number}
     * @memberof UserResponseAllOf
     */
    pkiUserID: number;
    /**
     * The unique ID of the Language.
     * 
     * Valid values:
     * 
     * |Value|Description|
     * |-|-|
     * |1|French|
     * |2|English|
     * @type {number}
     * @memberof UserResponseAllOf
     */
    fkiLanguageID: number;
    /**
     * 
     * @type {FieldEUserType}
     * @memberof UserResponseAllOf
     */
    eUserType: FieldEUserType;
    /**
     * The First name of the user
     * @type {string}
     * @memberof UserResponseAllOf
     */
    sUserFirstname: string;
    /**
     * The Last name of the user
     * @type {string}
     * @memberof UserResponseAllOf
     */
    sUserLastname: string;
    /**
     * The Login name of the User.
     * @type {string}
     * @memberof UserResponseAllOf
     */
    sUserLoginname: string;
    /**
     * 
     * @type {CommonAudit}
     * @memberof UserResponseAllOf
     */
    objAudit: CommonAudit;
}

export function UserResponseAllOfFromJSON(json: any): UserResponseAllOf {
    return UserResponseAllOfFromJSONTyped(json, false);
}

export function UserResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'pkiUserID': json['pkiUserID'],
        'fkiLanguageID': json['fkiLanguageID'],
        'eUserType': FieldEUserTypeFromJSON(json['eUserType']),
        'sUserFirstname': json['sUserFirstname'],
        'sUserLastname': json['sUserLastname'],
        'sUserLoginname': json['sUserLoginname'],
        'objAudit': CommonAuditFromJSON(json['objAudit']),
    };
}

export function UserResponseAllOfToJSON(value?: UserResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'pkiUserID': value.pkiUserID,
        'fkiLanguageID': value.fkiLanguageID,
        'eUserType': FieldEUserTypeToJSON(value.eUserType),
        'sUserFirstname': value.sUserFirstname,
        'sUserLastname': value.sUserLastname,
        'sUserLoginname': value.sUserLoginname,
        'objAudit': CommonAuditToJSON(value.objAudit),
    };
}


