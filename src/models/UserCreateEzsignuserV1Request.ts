/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign application.  We provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.  You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.  If you need helping understanding how to use this API, don\'t waste too much time looking for it. Contact support-api@ezmax.ca, we\'re here to help. We are developpers so we know programmers don\'t like bad documentation. If you don\'t find what you need in the documentation, let us know, we\'ll improve it and put you rapidly up on track.
 *
 * The version of the OpenAPI document: 1.0.22
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Request for the /1/module/user/createEzsignuser API Request
 * @export
 * @interface UserCreateEzsignuserV1Request
 */
export interface UserCreateEzsignuserV1Request {
    /**
     * The unique ID of the Language.
     * 
     * Valid values:
     * 
     * |Value|Description|
     * |-|-|
     * |1|French|
     * |2|English|
     * @type {number}
     * @memberof UserCreateEzsignuserV1Request
     */
    fkiLanguageID: number;
    /**
     * The First name of the user
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sUserFirstname: string;
    /**
     * The Last name of the user
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sUserLastname: string;
    /**
     * The email address.
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sEmailAddress: string;
    /**
     * The region of the phone number. (For a North America Number only)
     * 
     * The region is the "514" section in this sample phone number: (514) 990-1516 x123
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sPhoneRegion: string;
    /**
     * The exchange of the phone number. (For a North America Number only)
     * 
     * The exchange is the "990" section in this sample phone number: (514) 990-1516 x123
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sPhoneExchange: string;
    /**
     * The number of the phone number. (For a North America Number only)
     * 
     * The number is the "1516" section in this sample phone number: (514) 990-1516 x123
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sPhoneNumber: string;
    /**
     * The extension of the phone number.
     * 
     * The extension is the "123" section in this sample phone number: (514) 990-1516 x123.
     * 
     * It can also be used with international phone numbers
     * @type {string}
     * @memberof UserCreateEzsignuserV1Request
     */
    sPhoneExtension?: string;
}

export function UserCreateEzsignuserV1RequestFromJSON(json: any): UserCreateEzsignuserV1Request {
    return UserCreateEzsignuserV1RequestFromJSONTyped(json, false);
}

export function UserCreateEzsignuserV1RequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCreateEzsignuserV1Request {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fkiLanguageID': json['fkiLanguageID'],
        'sUserFirstname': json['sUserFirstname'],
        'sUserLastname': json['sUserLastname'],
        'sEmailAddress': json['sEmailAddress'],
        'sPhoneRegion': json['sPhoneRegion'],
        'sPhoneExchange': json['sPhoneExchange'],
        'sPhoneNumber': json['sPhoneNumber'],
        'sPhoneExtension': !exists(json, 'sPhoneExtension') ? undefined : json['sPhoneExtension'],
    };
}

export function UserCreateEzsignuserV1RequestToJSON(value?: UserCreateEzsignuserV1Request | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fkiLanguageID': value.fkiLanguageID,
        'sUserFirstname': value.sUserFirstname,
        'sUserLastname': value.sUserLastname,
        'sEmailAddress': value.sEmailAddress,
        'sPhoneRegion': value.sPhoneRegion,
        'sPhoneExchange': value.sPhoneExchange,
        'sPhoneNumber': value.sPhoneNumber,
        'sPhoneExtension': value.sPhoneExtension,
    };
}


