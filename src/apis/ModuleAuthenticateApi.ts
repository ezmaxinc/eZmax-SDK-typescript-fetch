/* tslint:disable */
/* eslint-disable */
/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.46
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AuthenticateAuthenticateV2Request,
    AuthenticateAuthenticateV2RequestFromJSON,
    AuthenticateAuthenticateV2RequestToJSON,
    AuthenticateAuthenticateV2Response,
    AuthenticateAuthenticateV2ResponseFromJSON,
    AuthenticateAuthenticateV2ResponseToJSON,
    CommonResponseError,
    CommonResponseErrorFromJSON,
    CommonResponseErrorToJSON,
} from '../models';

export interface AuthenticateAuthenticateV2OperationRequest {
    eSessionType: AuthenticateAuthenticateV2ESessionTypeEnum;
    authenticateAuthenticateV2Request: AuthenticateAuthenticateV2Request;
}

/**
 * 
 */
export class ModuleAuthenticateApi extends runtime.BaseAPI {

    /**
     * This endpoint authenticates a user.
     * Authenticate a user
     */
    async authenticateAuthenticateV2Raw(requestParameters: AuthenticateAuthenticateV2OperationRequest): Promise<runtime.ApiResponse<AuthenticateAuthenticateV2Response>> {
        if (requestParameters.eSessionType === null || requestParameters.eSessionType === undefined) {
            throw new runtime.RequiredError('eSessionType','Required parameter requestParameters.eSessionType was null or undefined when calling authenticateAuthenticateV2.');
        }

        if (requestParameters.authenticateAuthenticateV2Request === null || requestParameters.authenticateAuthenticateV2Request === undefined) {
            throw new runtime.RequiredError('authenticateAuthenticateV2Request','Required parameter requestParameters.authenticateAuthenticateV2Request was null or undefined when calling authenticateAuthenticateV2.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Authorization authentication
        }

        const response = await this.request({
            path: `/2/module/authenticate/authenticate/{eSessionType}`.replace(`{${"eSessionType"}}`, encodeURIComponent(String(requestParameters.eSessionType))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthenticateAuthenticateV2RequestToJSON(requestParameters.authenticateAuthenticateV2Request),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticateAuthenticateV2ResponseFromJSON(jsonValue));
    }

    /**
     * This endpoint authenticates a user.
     * Authenticate a user
     */
    async authenticateAuthenticateV2(requestParameters: AuthenticateAuthenticateV2OperationRequest): Promise<AuthenticateAuthenticateV2Response> {
        const response = await this.authenticateAuthenticateV2Raw(requestParameters);
        return await response.value();
    }

}

/**
    * @export
    * @enum {string}
    */
export enum AuthenticateAuthenticateV2OperationESessionTypeEnum {
    ezsignuser = 'ezsignuser'
}
